# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: projet_ng_ci/package-lock.json

      - name: Build de Angular
        run: |
          cd projet_ng_ci
          npm install
          npm run build

      - name: Partage des fichiers HTML / CSS / JS
        uses: actions/upload-artifact@v3
        with:
          name: app-ng
          path: projet_ng_ci/dist/projet_ng_ci
  docker:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Récupération des fichiers HTML / CSS / JS
        uses: actions/download-artifact@v3
        with:
          name: app-ng
      - name: List contents of the directory
        run: |
          ls -l
          ls -l projet_ng_ci  

      - name: Installation QEMU
        uses: docker/setup-qemu-action@v3

      - name: Installation Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Connexion au Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_GITHUB }}

      - name: Build de l'image & Push de l'image sur le Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: projet_ng_ci/Dockerfile 
          push: true
          tags: saousane/ajc-soutenance:angular
  
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Préparation de la connexion SSH vers notre machine
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Commandes pour info à exécuter sur la machine distante
        run: >
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}
          "
            # docker stop ajc-angular || true
            # docker rm ajc-angular || true
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN_SERVER }}
            docker run -d -p 8076:8080 --name ajc-angular --pull=always saousane/ajc-soutenance:angular
            exit
          "
        
      - name: Nettoyage
        run: rm -rf ~/.ssh